import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class OnlineBookStore {
    private static List<Book> books = new ArrayList<>();
    private static UserManager userManager = new UserManager();

    public static void main(String[] args) {
        initializeBooks();
        Scanner sc = new Scanner(System.in);

        while (true) {
            System.out.println("\n--- Welcome to the Online Book Store ---");
            System.out.println("1. Sign Up");
            System.out.println("2. Log In");
            System.out.println("3. Exit");
            System.out.println("Enter your choice:");
            int choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1:
                    System.out.println("Enter username:");
                    String username = sc.nextLine();
                    System.out.println("Enter email:");
                    String email = sc.nextLine();
                    System.out.println("Enter password:");
                    String password = sc.nextLine();
                    userManager.registerUser(username, email, password);
                    break;
                case 2:
                    System.out.println("Enter email:");
                    String loginEmail = sc.nextLine();
                    System.out.println("Enter password:");
                    String loginPassword = sc.nextLine();
                    User user = userManager.loginUser(loginEmail, loginPassword);
                    if (user != null) {
                        openMainMenu(user);
                    }
                    break;
                case 3:
                    System.out.println("Thank you for visiting. Goodbye!");
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void openMainMenu(User user) {
        ShoppingCart cart = new ShoppingCart();
        Scanner sc = new Scanner(System.in);
        boolean continueShopping = true;

        while (continueShopping) {
            System.out.println("\n--- Main Menu ---");
            System.out.println("1. View All Books");
            System.out.println("2. Add Book to Cart");
            System.out.println("3. View Cart");
            System.out.println("4. Proceed to Payment");
            System.out.println("5. Log Out");
            System.out.println("Enter your choice:");
            int choice = sc.nextInt();
            sc.nextLine();

            switch (choice) {
                case 1:
                    viewAllBooks();
                    break;
                case 2:
                    System.out.println("Enter the Book ID to add to cart:");
                    String bookId = sc.nextLine();
                    System.out.println("Enter the quantity:");
                    int quantity = sc.nextInt();
                    sc.nextLine();
                    addBookToCart(bookId, quantity, cart);
                    break;
                case 3:
                    cart.viewCart();
                    break;
                case 4:
                    proceedToPayment(cart);
                    break;
                case 5:
                    System.out.println("Logging out...");
                    continueShopping = false;
                    break;
                default:
                    System.out.println("Invalid choice. Try again.");
            }
        }
    }

    private static void initializeBooks() {
        books.add(new Book("B001", "The Great Adventure", "Fiction", 19.99, 10));
        books.add(new Book("B002", "Mysteries of the Universe", "Science", 29.99, 5));
        books.add(new Book("B003", "Learn Java in 24 Hours", "Software", 39.99, 7));
        books.add(new Book("B004", "Exploring Ancient History", "History", 24.99, 8));
        books.add(new Book("B005", "Creative Writing for Beginners", "English", 14.99, 12));
    }

    private static void viewAllBooks() {
        System.out.println("Available Books:");
        for (Book book : books) {
            System.out.println(book.getDetails());
        }
    }

    private static void addBookToCart(String bookId, int quantity, ShoppingCart cart) {
        for (Book book : books) {
            if (book.getBookId().equalsIgnoreCase(bookId)) {
                if (book.checkAvailability() && book.availableQuantity >= quantity) {
                    cart.addToCart(book, quantity);
                    System.out.println(quantity + " copies of " + book.getTitle() + " added to cart.");
                } else {
                    System.out.println("Not enough stock available.");
                }
                return;
            }
        }
        System.out.println("Book not found.");
    }

    private static void proceedToPayment(ShoppingCart cart) {
        if (cart != null) {
            Payment payment = new Payment();
            double totalAmount = cart.calculateTotal();
            if (totalAmount > 0) {
                System.out.println("Total amount: $" + totalAmount);
                if (payment.processPayment(totalAmount)) {
                    System.out.println("Payment successful. Thank you for your purchase!");
                    cart.clearCart();
                } else {
                    System.out.println("Payment failed.");
                }
            } else {
                System.out.println("Your cart is empty.");
            }
        }
    }
}
